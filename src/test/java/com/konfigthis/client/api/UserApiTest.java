/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Collaboration;
import java.util.UUID;
import com.konfigthis.client.model.UserGetInformationResponse;
import com.konfigthis.client.model.UserGetInformationdefaultResponse;
import com.konfigthis.client.model.UserGetUserInformationResponse;
import com.konfigthis.client.model.UserGetUserInformationdefaultResponse;
import com.konfigthis.client.model.UserListCollaborationsdefaultResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private static UserApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UserApi(apiClient);
    }

    /**
     * User Information
     *
     * Provides information about the user that is currently signed in.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInformationTest() throws ApiException {
        UserGetInformationResponse response = api.getInformation()
                .execute();
        // TODO: test validations
    }

    /**
     * User Information
     *
     * Provides information about the user with the given ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserInformationTest() throws ApiException {
        UUID id = null;
        UserGetUserInformationResponse response = api.getUserInformation(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Collaborations
     *
     * Provides the set of organizations of which a user is a member or a collaborator.  The set of organizations that a user can collaborate on is composed of:  * Organizations that the current user belongs to across VCS types (e.g. BitBucket, GitHub) * The parent organization of repository that the user can collaborate on, but is not necessarily a member of * The organization of the current user&#39;s account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCollaborationsTest() throws ApiException {
        List<Collaboration> response = api.listCollaborations()
                .execute();
        // TODO: test validations
    }

}
