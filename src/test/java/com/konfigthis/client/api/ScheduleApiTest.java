/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ScheduleCreateNewScheduleRequest;
import com.konfigthis.client.model.ScheduleCreateNewScheduleRequestTimetable;
import com.konfigthis.client.model.ScheduleCreateNewScheduleResponse;
import com.konfigthis.client.model.ScheduleCreateNewScheduledefaultResponse;
import com.konfigthis.client.model.ScheduleGetAllSchedulesResponse;
import com.konfigthis.client.model.ScheduleGetAllSchedulesdefaultResponse;
import com.konfigthis.client.model.ScheduleGetByIdResponse;
import com.konfigthis.client.model.ScheduleGetByIddefaultResponse;
import com.konfigthis.client.model.ScheduleRemoveByIdResponse;
import com.konfigthis.client.model.ScheduleRemoveByIddefaultResponse;
import com.konfigthis.client.model.ScheduleUpdateScheduleRequest;
import com.konfigthis.client.model.ScheduleUpdateScheduleRequestTimetable;
import com.konfigthis.client.model.ScheduleUpdateScheduleResponse;
import com.konfigthis.client.model.ScheduleUpdateScheduledefaultResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScheduleApi
 */
@Disabled
public class ScheduleApiTest {

    private static ScheduleApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ScheduleApi(apiClient);
    }

    /**
     * Create a schedule
     *
     * Not yet available to projects that use GitLab or GitHub App. Creates a schedule and returns the created schedule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewScheduleTest() throws ApiException {
        Map<String, Object> parameters = null;
        String name = null;
        ScheduleCreateNewScheduleRequestTimetable timetable = null;
        String attributionActor = null;
        String projectSlug = null;
        String description = null;
        ScheduleCreateNewScheduleResponse response = api.createNewSchedule(parameters, name, timetable, attributionActor, projectSlug)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all schedules
     *
     * Returns all schedules for this project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllSchedulesTest() throws ApiException {
        String projectSlug = null;
        String pageToken = null;
        ScheduleGetAllSchedulesResponse response = api.getAllSchedules(projectSlug)
                .pageToken(pageToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a schedule
     *
     * Get a schedule by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        UUID scheduleId = null;
        ScheduleGetByIdResponse response = api.getById(scheduleId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a schedule
     *
     * Not yet available to projects that use GitLab or GitHub App. Deletes the schedule by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        UUID scheduleId = null;
        ScheduleRemoveByIdResponse response = api.removeById(scheduleId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a schedule
     *
     * Not yet available to projects that use GitLab or GitHub App. Updates a schedule and returns the updated schedule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateScheduleTest() throws ApiException {
        UUID scheduleId = null;
        String description = null;
        Map<String, Object> parameters = null;
        String name = null;
        ScheduleUpdateScheduleRequestTimetable timetable = null;
        String attributionActor = null;
        ScheduleUpdateScheduleResponse response = api.updateSchedule(scheduleId)
                .description(description)
                .parameters(parameters)
                .name(name)
                .timetable(timetable)
                .attributionActor(attributionActor)
                .execute();
        // TODO: test validations
    }

}
