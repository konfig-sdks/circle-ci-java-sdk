/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.InsightsGetFlakyTestsResponse;
import com.konfigthis.client.model.InsightsGetFlakyTestsdefaultResponse;
import com.konfigthis.client.model.InsightsGetJobTimeseriesDataResponse;
import com.konfigthis.client.model.InsightsGetJobTimeseriesDatadefaultResponse;
import com.konfigthis.client.model.InsightsGetProjectSummaryMetricsResponse;
import com.konfigthis.client.model.InsightsGetProjectSummaryMetricsdefaultResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowJobMetricsResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowJobMetricsdefaultResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowMetricsResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowMetricsdefaultResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowTestMetricsResponse;
import com.konfigthis.client.model.InsightsGetProjectWorkflowTestMetricsdefaultResponse;
import com.konfigthis.client.model.InsightsGetRecentWorkflowRunsResponse;
import com.konfigthis.client.model.InsightsGetRecentWorkflowRunsdefaultResponse;
import com.konfigthis.client.model.InsightsGetSummaryMetricsWithTrendsResponse;
import com.konfigthis.client.model.InsightsGetSummaryMetricsWithTrendsdefaultResponse;
import com.konfigthis.client.model.InsightsGetWorkflowSummaryMetricsResponse;
import com.konfigthis.client.model.InsightsGetWorkflowSummaryMetricsdefaultResponse;
import com.konfigthis.client.model.InsightsListProjectBranchesResponse;
import com.konfigthis.client.model.InsightsListProjectBranchesdefaultResponse;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InsightsApi
 */
@Disabled
public class InsightsApiTest {

    private static InsightsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new InsightsApi(apiClient);
    }

    /**
     * Get flaky tests for a project
     *
     * Get a list of flaky tests for a given project. Flaky tests are branch agnostic.              A flaky test is a test that passed and failed in the same commit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFlakyTestsTest() throws ApiException {
        String projectSlug = null;
        InsightsGetFlakyTestsResponse response = api.getFlakyTests(projectSlug)
                .execute();
        // TODO: test validations
    }

    /**
     * Job timeseries data
     *
     * Get timeseries data for all jobs within a workflow. Hourly granularity data is only retained for 48 hours while daily granularity data is retained for 90 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobTimeseriesDataTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        String branch = null;
        String granularity = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        InsightsGetJobTimeseriesDataResponse response = api.getJobTimeseriesData(projectSlug, workflowName)
                .branch(branch)
                .granularity(granularity)
                .startDate(startDate)
                .endDate(endDate)
                .execute();
        // TODO: test validations
    }

    /**
     * Get summary metrics and trends for a project across it&#39;s workflows and branches
     *
     * Get summary metrics and trends for a project at workflow and branch level.              Workflow runs going back at most 90 days are included in the aggregation window.              Trends are only supported upto last 30 days.              Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectSummaryMetricsTest() throws ApiException {
        String projectSlug = null;
        String reportingWindow = null;
        Object branches = null;
        Object workflowNames = null;
        InsightsGetProjectSummaryMetricsResponse response = api.getProjectSummaryMetrics(projectSlug)
                .reportingWindow(reportingWindow)
                .branches(branches)
                .workflowNames(workflowNames)
                .execute();
        // TODO: test validations
    }

    /**
     * Get summary metrics for a project workflow&#39;s jobs.
     *
     * Get summary metrics for a project workflow&#39;s jobs. Job runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours. Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectWorkflowJobMetricsTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        String pageToken = null;
        Boolean allBranches = null;
        String branch = null;
        String reportingWindow = null;
        InsightsGetProjectWorkflowJobMetricsResponse response = api.getProjectWorkflowJobMetrics(projectSlug, workflowName)
                .pageToken(pageToken)
                .allBranches(allBranches)
                .branch(branch)
                .reportingWindow(reportingWindow)
                .execute();
        // TODO: test validations
    }

    /**
     * Get summary metrics for a project&#39;s workflows
     *
     * Get summary metrics for a project&#39;s workflows.  Workflow runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours.  Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectWorkflowMetricsTest() throws ApiException {
        String projectSlug = null;
        String pageToken = null;
        Boolean allBranches = null;
        String branch = null;
        String reportingWindow = null;
        InsightsGetProjectWorkflowMetricsResponse response = api.getProjectWorkflowMetrics(projectSlug)
                .pageToken(pageToken)
                .allBranches(allBranches)
                .branch(branch)
                .reportingWindow(reportingWindow)
                .execute();
        // TODO: test validations
    }

    /**
     * Get test metrics for a project&#39;s workflows
     *
     * Get test metrics for a project&#39;s workflows. Currently tests metrics are calculated based on 10 most recent workflow runs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectWorkflowTestMetricsTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        String branch = null;
        Boolean allBranches = null;
        InsightsGetProjectWorkflowTestMetricsResponse response = api.getProjectWorkflowTestMetrics(projectSlug, workflowName)
                .branch(branch)
                .allBranches(allBranches)
                .execute();
        // TODO: test validations
    }

    /**
     * Get recent runs of a workflow
     *
     * Get recent runs of a workflow. Runs going back at most 90 days are returned. Please note that Insights is not a financial reporting tool and should not be used for precise credit reporting.  Credit reporting from Insights does not use the same source of truth as the billing information that is found in the Plan Overview page in the CircleCI UI, nor does the underlying data have the same data accuracy guarantees as the billing information in the CircleCI UI.  This may lead to discrepancies between credits reported from Insights and the billing information in the Plan Overview page of the CircleCI UI.  For precise credit reporting, always use the Plan Overview page in the CircleCI UI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecentWorkflowRunsTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        Boolean allBranches = null;
        String branch = null;
        String pageToken = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        InsightsGetRecentWorkflowRunsResponse response = api.getRecentWorkflowRuns(projectSlug, workflowName)
                .allBranches(allBranches)
                .branch(branch)
                .pageToken(pageToken)
                .startDate(startDate)
                .endDate(endDate)
                .execute();
        // TODO: test validations
    }

    /**
     * Get summary metrics with trends for the entire org, and for each project.
     *
     * Gets aggregated summary metrics with trends for the entire org.               Also gets aggregated metrics and trends for each project belonging to the org.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSummaryMetricsWithTrendsTest() throws ApiException {
        String orgSlug = null;
        String reportingWindow = null;
        Object projectNames = null;
        InsightsGetSummaryMetricsWithTrendsResponse response = api.getSummaryMetricsWithTrends(orgSlug)
                .reportingWindow(reportingWindow)
                .projectNames(projectNames)
                .execute();
        // TODO: test validations
    }

    /**
     * Get metrics and trends for workflows
     *
     * Get the metrics and trends for a particular workflow on a single branch or all branches
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowSummaryMetricsTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        Boolean allBranches = null;
        String branch = null;
        InsightsGetWorkflowSummaryMetricsResponse response = api.getWorkflowSummaryMetrics(projectSlug, workflowName)
                .allBranches(allBranches)
                .branch(branch)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all branches for a project
     *
     * Get a list of all branches for a specified project. The list will only contain branches currently available within Insights. The maximum number of branches returned by this endpoint is 5,000.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectBranchesTest() throws ApiException {
        String projectSlug = null;
        String workflowName = null;
        InsightsListProjectBranchesResponse response = api.listProjectBranches(projectSlug)
                .workflowName(workflowName)
                .execute();
        // TODO: test validations
    }

}
