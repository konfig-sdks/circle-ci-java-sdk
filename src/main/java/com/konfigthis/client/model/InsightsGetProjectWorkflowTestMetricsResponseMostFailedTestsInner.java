/*
 * CircleCI API
 * This describes the resources that make up the CircleCI API v2.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner {
  public static final String SERIALIZED_NAME_P95_DURATION = "p95_duration";
  @SerializedName(SERIALIZED_NAME_P95_DURATION)
  private Double p95Duration;

  public static final String SERIALIZED_NAME_TOTAL_RUNS = "total_runs";
  @SerializedName(SERIALIZED_NAME_TOTAL_RUNS)
  private Long totalRuns;

  public static final String SERIALIZED_NAME_CLASSNAME = "classname";
  @SerializedName(SERIALIZED_NAME_CLASSNAME)
  private String classname;

  public static final String SERIALIZED_NAME_FAILED_RUNS = "failed_runs";
  @SerializedName(SERIALIZED_NAME_FAILED_RUNS)
  private Long failedRuns;

  public static final String SERIALIZED_NAME_FLAKY = "flaky";
  @SerializedName(SERIALIZED_NAME_FLAKY)
  private Boolean flaky;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  private String _file;

  public static final String SERIALIZED_NAME_JOB_NAME = "job_name";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private String jobName;

  public static final String SERIALIZED_NAME_TEST_NAME = "test_name";
  @SerializedName(SERIALIZED_NAME_TEST_NAME)
  private String testName;

  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner() {
  }

  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner p95Duration(Double p95Duration) {
    
    
    
    
    this.p95Duration = p95Duration;
    return this;
  }

   /**
   * The 95th percentile duration, in seconds, among a group of test runs.
   * @return p95Duration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The 95th percentile duration, in seconds, among a group of test runs.")

  public Double getP95Duration() {
    return p95Duration;
  }


  public void setP95Duration(Double p95Duration) {
    
    
    
    this.p95Duration = p95Duration;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner totalRuns(Long totalRuns) {
    if (totalRuns != null && totalRuns < 0) {
      throw new IllegalArgumentException("Invalid value for totalRuns. Must be greater than or equal to 0.");
    }
    
    
    
    this.totalRuns = totalRuns;
    return this;
  }

   /**
   * The total number of times the test was run.
   * minimum: 0
   * @return totalRuns
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The total number of times the test was run.")

  public Long getTotalRuns() {
    return totalRuns;
  }


  public void setTotalRuns(Long totalRuns) {
    if (totalRuns != null && totalRuns < 0) {
      throw new IllegalArgumentException("Invalid value for totalRuns. Must be greater than or equal to 0.");
    }
    
    
    this.totalRuns = totalRuns;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner classname(String classname) {
    
    
    
    
    this.classname = classname;
    return this;
  }

   /**
   * The class the test belongs to.
   * @return classname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The class the test belongs to.")

  public String getClassname() {
    return classname;
  }


  public void setClassname(String classname) {
    
    
    
    this.classname = classname;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner failedRuns(Long failedRuns) {
    if (failedRuns != null && failedRuns < 0) {
      throw new IllegalArgumentException("Invalid value for failedRuns. Must be greater than or equal to 0.");
    }
    
    
    
    this.failedRuns = failedRuns;
    return this;
  }

   /**
   * The number of times the test failed
   * minimum: 0
   * @return failedRuns
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The number of times the test failed")

  public Long getFailedRuns() {
    return failedRuns;
  }


  public void setFailedRuns(Long failedRuns) {
    if (failedRuns != null && failedRuns < 0) {
      throw new IllegalArgumentException("Invalid value for failedRuns. Must be greater than or equal to 0.");
    }
    
    
    this.failedRuns = failedRuns;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner flaky(Boolean flaky) {
    
    
    
    
    this.flaky = flaky;
    return this;
  }

   /**
   * Whether the test is flaky.
   * @return flaky
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the test is flaky.")

  public Boolean getFlaky() {
    return flaky;
  }


  public void setFlaky(Boolean flaky) {
    
    
    
    this.flaky = flaky;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner source(String source) {
    
    
    
    
    this.source = source;
    return this;
  }

   /**
   * The source of the test.
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The source of the test.")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    
    
    
    this.source = source;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner _file(String _file) {
    
    
    
    
    this._file = _file;
    return this;
  }

   /**
   * The file the test belongs to.
   * @return _file
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The file the test belongs to.")

  public String getFile() {
    return _file;
  }


  public void setFile(String _file) {
    
    
    
    this._file = _file;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner jobName(String jobName) {
    
    
    
    
    this.jobName = jobName;
    return this;
  }

   /**
   * The name of the job.
   * @return jobName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the job.")

  public String getJobName() {
    return jobName;
  }


  public void setJobName(String jobName) {
    
    
    
    this.jobName = jobName;
  }


  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner testName(String testName) {
    
    
    
    
    this.testName = testName;
    return this;
  }

   /**
   * The name of the test.
   * @return testName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the test.")

  public String getTestName() {
    return testName;
  }


  public void setTestName(String testName) {
    
    
    
    this.testName = testName;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner instance itself
   */
  public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner = (InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner) o;
    return Objects.equals(this.p95Duration, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.p95Duration) &&
        Objects.equals(this.totalRuns, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.totalRuns) &&
        Objects.equals(this.classname, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.classname) &&
        Objects.equals(this.failedRuns, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.failedRuns) &&
        Objects.equals(this.flaky, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.flaky) &&
        Objects.equals(this.source, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.source) &&
        Objects.equals(this._file, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner._file) &&
        Objects.equals(this.jobName, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.jobName) &&
        Objects.equals(this.testName, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.testName)&&
        Objects.equals(this.additionalProperties, insightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(p95Duration, totalRuns, classname, failedRuns, flaky, source, _file, jobName, testName, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner {\n");
    sb.append("    p95Duration: ").append(toIndentedString(p95Duration)).append("\n");
    sb.append("    totalRuns: ").append(toIndentedString(totalRuns)).append("\n");
    sb.append("    classname: ").append(toIndentedString(classname)).append("\n");
    sb.append("    failedRuns: ").append(toIndentedString(failedRuns)).append("\n");
    sb.append("    flaky: ").append(toIndentedString(flaky)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    testName: ").append(toIndentedString(testName)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("p95_duration");
    openapiFields.add("total_runs");
    openapiFields.add("classname");
    openapiFields.add("failed_runs");
    openapiFields.add("flaky");
    openapiFields.add("source");
    openapiFields.add("file");
    openapiFields.add("job_name");
    openapiFields.add("test_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("p95_duration");
    openapiRequiredFields.add("total_runs");
    openapiRequiredFields.add("classname");
    openapiRequiredFields.add("failed_runs");
    openapiRequiredFields.add("flaky");
    openapiRequiredFields.add("source");
    openapiRequiredFields.add("file");
    openapiRequiredFields.add("job_name");
    openapiRequiredFields.add("test_name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner is not found in the empty JSON string", InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("classname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `classname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("classname").toString()));
      }
      if (!jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if (!jsonObj.get("file").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `file` to be a primitive type in the JSON string but got `%s`", jsonObj.get("file").toString()));
      }
      if (!jsonObj.get("job_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_name").toString()));
      }
      if (!jsonObj.get("test_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `test_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("test_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner>() {
           @Override
           public void write(JsonWriter out, InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner
  * @throws IOException if the JSON string is invalid with respect to InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner
  */
  public static InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner.class);
  }

 /**
  * Convert an instance of InsightsGetProjectWorkflowTestMetricsResponseMostFailedTestsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

